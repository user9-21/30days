gcloud auth list
gsutil cat gs://cloud-training/gsp318/marking/setup_marking.sh | bash
gcloud source repos clone valkyrie-app
cd valkyrie-app
cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF
docker build -t valkyrie-app:v0.0.1 .
cd ..
cd marking
./step1.sh

sleep 10

cd ..
cd valkyrie-app
docker run -p 8080:8080 valkyrie-app:v0.0.1 &
tput bold; tput setaf 3 ;echo Now, Web Preview on port 80 ; tput sgr0;
sleep 20
cd ..
cd marking
./step2.sh

#preview on port 80


tput bold; tput setaf 3 ;echo verify docker build is running ; tput sgr0;
tput bold; tput setaf 3 ;echo after build run, run this code ; tput sgr0;
cd ..
cat > 2.sh <<EOF

cd valkyrie-app
docker tag valkyrie-app:v0.0.1 gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1
sed -i s#IMAGE_HERE#gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1#g k8s/deployment.yaml
sed -i s#IMAGE_HERE#gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.1#g k8s/deployment.yaml
gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d
kubectl create -f k8s/deployment.yaml
kubectl create -f k8s/service.yaml
git merge origin/kurt-dev

tput bold; tput setaf 3 ;echo Now, Edit replicas from 1 to 3 ; tput sgr0;
sleep 15
docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.2 .
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.2

tput bold; tput setaf 3 ;echo Now, Edit image from valkyrie-app:v0.0.1 to valkyrie-app:v0.0.2 ; tput sgr0;
sleep 15
kubectl edit deployment valkyrie-dev
sleep 4
docker ps
tput bold; tput setaf 3 ;echo Now, kill the docker by container_id, run this ; tput sgr0;
tput bold; tput setab 1 ;echo '
docker kill REPLACE_WITH_CONTAINER_ID
'; tput sgr0;

tput bold; tput setaf 3 ;echo After docker killed run this ; tput sgr0;
tput bold; tput setab 1 ;echo '
./3.sh

'; tput sgr0;

EOF

cat > 3.sh <<EOF

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &
printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo
gcloud source repos list

tput bold; tput setaf 3 ;echo Now, Web Preview on port 80 to open jenkins; tput sgr0;
tput bold; tput setaf 3 ;echo Enter admin as username and password displayed above to signin ; tput sgr0;
tput bold; tput setaf 3 ;echo After now, Deploy jenkins manually; tput sgr0;
tput bold; tput setaf 3 ;echo After jenkins deployed, run this ; tput sgr0;
tput bold; tput setab 1 ;echo '
./laststep.sh

'; tput sgr0;

EOF

cat > laststep.sh <<EOF

sed -i "s/green/orange/g" source/html.go
sed -i "s/YOUR_PROJECT/$GOOGLE_CLOUD_PROJECT/g" Jenkinsfile
git config --global user.email "$(gcloud config get-value core/account)"
git config --global user.name "$(gcloud config get-value core/account)"
git add .
git commit -m "built pipeline init"
git push

EOF
ls
chmod +x 2.sh
chmod +x 3.sh
chmod +x laststep.sh
echo file permission grantd
tput bold; tput setab 1 ;echo '
./2.sh

'; tput sgr0;

