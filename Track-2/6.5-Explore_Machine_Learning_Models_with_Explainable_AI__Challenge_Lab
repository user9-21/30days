gsutil mb gs://$GOOGLE_CLOUD_PROJECT
gcloud services enable notebooks.googleapis.com
gcloud compute images describe-from-family tf2-ent-2-6-cpu --project deeplearning-platform-release

gcloud notebooks instances create instance-without-gpu \
  --vm-image-project=deeplearning-platform-release \
  --vm-image-family=tf2-ent-2-6-cpu \
  --machine-type=n1-standard-4 \
  --location=us-central1-a
gcloud notebooks instances list --location=us-central1-a

cat > laststep.sh <<EOF
tput bold;tput setaf 4;
# retry this if error in ssh

gcloud compute ssh --project $GOOGLE_CLOUD_PROJECT --quiet  --zone us-central1-a   instance-without-gpu -- -L 8080:localhost:8080

# in jupyterlab

git clone https://github.com/GoogleCloudPlatform/training-data-analyst
PROJECT=$(gcloud config get-value core/project)
cd training-data-analyst/quests/dei
wget https://raw.githubusercontent.com/user9-21/30days/main/files/challenge-lab.ipynb
sed -i 's/#TODO/Your_Project_here/g' challenge-lab.ipynb

# Copy PROJECT_ID and paste in the challenge-lab.ipynb file
# and run all the command
tput sgr0;
EOF
ls
cat laststep.sh

STATE=$(gcloud notebooks instances list --location=us-central1-a --format='value(STATE)')
echo $STATE
sleep 10
while [ $STATE = PROVISIONING ]; 
do echo "WAIT" && sleep 120 && STATE=$(gcloud notebooks instances list --location=us-central1-a --format='value(STATE)') ; 
done
echo $STATE
sleep 2
while [ $STATE = ACTIVE ]; 
do echo "preview on port 80 to open jupyterlab" && gcloud compute ssh --project $GOOGLE_CLOUD_PROJECT --quiet --zone us-central1-a   instance-without-gpu -- -L 8080:localhost:8080 ; 
done

