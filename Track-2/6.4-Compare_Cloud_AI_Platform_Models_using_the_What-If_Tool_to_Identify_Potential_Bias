red=`tput setaf 1`
redb=`tput setab 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
bold=`tput bold`
reset=`tput sgr0`

gcloud services enable notebooks.googleapis.com
gcloud compute images describe-from-family tf2-ent-2-3-cpu --project deeplearning-platform-release

gcloud notebooks instances create instance-without-gpu \
  --vm-image-project=deeplearning-platform-release \
  --vm-image-family=tf2-ent-2-3-cpu \
  --machine-type=n1-standard-4 \
  --location=us-central1-a
gcloud notebooks instances list --location=us-central1-a

echo "${red}${bold}
# retry this if error in ssh

gcloud compute ssh --project $GOOGLE_CLOUD_PROJECT --quiet  --zone us-central1-a   instance-without-gpu -- -L 8080:localhost:8080${reset}"

cat > laststep.sh <<EOF
yellow=`tput setaf 3`
bold=`tput bold`
reset=`tput sgr0`

# in jupyterlab 

pip3 install xgboost==0.82 --user
pip3 install scikit-learn==0.20.4 --user
git clone https://github.com/GoogleCloudPlatform/training-data-analyst
PROJECT=$(gcloud config get-value core/project)
cd training-data-analyst/quests/dei/census
echo $PROJECT

echo "${yellow}
NAvigate to - training-data-analyst/quests/dei/census

Copy PROJECT_ID and paste in the income_xgboost.ipynb file and run all command${reset}"
EOF

PROJECT=$(gcloud config get-value core/project)
gsutil mb gs://$PROJECT
ls
gsutil cp laststep.sh gs://$PROJECT

STATE=$(gcloud notebooks instances list --location=us-central1-a --format='value(STATE)')
echo $STATE
sleep 10
while [ $STATE = PROVISIONING ]; 
do echo "PROVISIONING" && sleep 2 && STATE=$(gcloud notebooks instances list --location=us-central1-a --format='value(STATE)') ; 
done

while [ $STATE = ACTIVE ]; 
do echo $STATE && echo "${yellow}${bold}preview on port 80 to open jupyterlab${reset}" && echo "${redb}
Run this in jupyterlab terminal

PROJECT=$(gcloud config get-value core/project)
gsutil cp gs://$PROJECT/laststep.sh /home/jupyter/
chmod +x laststep.sh
./laststep.sh

${reset}" && gcloud compute ssh --project $GOOGLE_CLOUD_PROJECT --quiet --zone us-central1-a   instance-without-gpu -- -L 8080:localhost:8080 ; 
done
